// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int @id @default(autoincrement())
  username  String @db.VarChar(50) @unique
  email     String @db.VarChar(50) 
  password  String @db.VarChar(50)
  nickName  String @db.VarChar(50)
  headPic   String @db.VarChar(255) @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  friends Friendship[] @relation("userToFriend")
  inverseFriends Friendship[] @relation("friendToUser")
}



model Friendship {
  user User @relation("userToFriend", fields: [userId], references: [id])
  userId Int

  friend User @relation("friendToUser", fields: [friendId], references: [id])
  friendId Int

  @@id([userId, friendId])
}


model FriendRequset {
  id Int @id @default(autoincrement())
  // 请求发送方
  fromUserId Int
  // 请求接收方
  toUserId Int
  // 理由
  reason String @db.VarChar(255)
  // 请求状态
  status Int @default(0)
  // 请求时间
  createdAt DateTime @default(now())
  // 请求更新时间
  updatedAt DateTime @updatedAt
}